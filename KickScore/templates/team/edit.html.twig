{% extends 'base.html.twig' %}

{% block title %}Mon équipe - KickScore{% endblock %}

{% block body %}
    <div class="min-h-screen bg-gradient-to-br from-slate-50 to-white p-8">
        <div class="max-w-4xl mx-auto bg-white rounded-xl shadow-md p-8">
            <h1 class="text-4xl font-bold text-slate-800 mb-8">
                Équipe {{ team.name }}
                <span class="block mt-2 text-blue-900 text-2xl font-medium">
                    Gestion des membres
                </span>
            </h1>

            <div class="grid lg:grid-cols-2 gap-8">
                {# Liste des membres #}
                <div class="space-y-6">
                    <h2 class="text-xl font-bold text-slate-700">Membres</h2>
                    <div class="space-y-3">
                        {% for member in team.members %}
                            <div class="flex items-center justify-between p-4 bg-white border border-slate-200 rounded-lg hover:border-blue-900 transition-colors">
                                <div class="space-y-1">
                                    <div class="font-medium text-slate-800 flex items-center">
                                        {{ member.fname }} {{ member.name }}
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-2 text-slate-400" viewBox="0 0 16 16" fill="currentColor">
                                            <path d="M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2m3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2"/>
                                        </svg>
                                    </div>
                                    <div class="text-sm text-slate-500">{{ member.email }}</div>
                                </div>
                                {% if is_granted('ROLE_ORGANIZER') %}
                                    <form action="{{ path('app_team_remove_member', {'id': member.id}) }}" method="post" class="inline">
                                        <input type="hidden" name="_token" value="{{ csrf_token('remove' ~ member.id) }}">
                                        <button class="px-4 py-2 text-blue-900 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors font-medium">
                                            Supprimer
                                        </button>
                                    </form>
                                {% endif %}
                            </div>
                        {% endfor %}
                    </div>
                </div>

                {# Formulaire d'ajout #}
                <div class="bg-slate-50 p-6 rounded-xl">
                    <form method="post" action="{{ path('app_team_add_member') }}" class="space-y-4">
                        {% for message in app.flashes('success') %}
                            <div class="bg-green-50 border border-green-200 text-green-800 rounded-lg p-4 mb-6">
                                <p class="text-sm font-medium">{{ message }}</p>
                            </div>
                        {% endfor %}
                        {% for message in app.flashes('error') %}
                            <div class="bg-red-50 border border-red-200 text-red-800 rounded-lg p-4 mb-6">
                                <p class="text-sm font-medium">{{ message }}</p>
                            </div>
                        {% endfor %}
                        <h2 class="text-xl font-bold text-slate-700 mb-6">Ajouter un membre</h2>

                        <div class="space-y-1">
                            <label for="fname" class="text-sm font-medium text-slate-700">Prénom</label>
                            <input type="text" id="fname" name="fname"
                                   class="w-full px-4 py-3 rounded-lg border border-slate-200 focus:ring-2 focus:ring-blue-900 focus:border-blue-900 transition-colors"
                                   placeholder="Prénom du membre">
                        </div>

                        <div class="space-y-1">
                            <label for="name" class="text-sm font-medium text-slate-700">Nom</label>
                            <input type="text" id="name" name="name"
                                   class="w-full px-4 py-3 rounded-lg border border-slate-200 focus:ring-2 focus:ring-blue-900 focus:border-blue-900 transition-colors"
                                   placeholder="Nom du membre">
                        </div>

                        <div class="space-y-1">
                            <label for="email" class="text-sm font-medium text-slate-700">Email</label>
                            <input type="email" id="email" name="email"
                                   class="w-full px-4 py-3 rounded-lg border border-slate-200 focus:ring-2 focus:ring-blue-900 focus:border-blue-900 transition-colors"
                                   placeholder="Email du membre">
                        </div>

                        <div id="addBtn"
                             class="w-full px-4 py-3 bg-blue-100 text-blue-900 rounded-lg hover:bg-blue-200 transition-colors font-medium text-center cursor-pointer">
                            Ajouter
                        </div>

                        <input type="hidden" name="to_add" value="">

                        <button type="submit" disabled
                                class="w-full px-4 py-3 bg-slate-200 text-slate-500 rounded-lg font-medium flex items-center justify-center cursor-not-allowed">
                            Aucun nouveau membre
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-2" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2m3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2"/>
                            </svg>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        let membersToAdd = [];

        const addMemberToTab = (user) => {
            membersToAdd.push(user);

            const hiddenInput = document.querySelector('input[name="to_add"]');
            hiddenInput.value = JSON.stringify(membersToAdd);

            const container = document.querySelector('.space-y-3');
            const div = document.createElement('div');
            div.className = 'flex items-center justify-between p-4 bg-white border border-slate-200 rounded-lg hover:border-blue-900 transition-colors';

            const memberHTML = `
                <div class="space-y-1">
                    <div class="font-medium text-slate-800 flex items-center">
                        ${user.fname} ${user.name}
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-2 text-slate-400" viewBox="0 0 16 16" fill="currentColor">
                            <path d="M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2m3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2"/>
                        </svg>
                    </div>
                    <div class="text-sm text-slate-500">${user.email}</div>
                </div>
                <button type="button" class="remove-member px-4 py-2 text-blue-900 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors font-medium" data-index="${membersToAdd.length - 1}">
                    Retirer
                </button>
            `;

            div.innerHTML = memberHTML;
            container.appendChild(div);

            const removeButton = div.querySelector('.remove-member');
            removeButton.addEventListener('click', function() {
                const index = parseInt(this.dataset.index);
                membersToAdd.splice(index, 1);
                hiddenInput.value = JSON.stringify(membersToAdd);
                div.remove();
                updateSubmitButton();
            });

            updateSubmitButton();
        };

        const updateSubmitButton = () => {
            const submitBtn = document.querySelector('button[type="submit"]');

            if (membersToAdd.length > 0) {
                submitBtn.disabled = false;
                submitBtn.className = 'w-full px-4 py-3 bg-blue-900 text-white rounded-lg hover:bg-blue-800 transition-colors font-medium flex items-center justify-center cursor-pointer';
                submitBtn.innerHTML = `
                    Valider les ajouts
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-2" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M11 1a2 2 0 0 0-2 2v4a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h5V3a3 3 0 0 1 6 0v4a.5.5 0 0 1-1 0V3a2 2 0 0 0-2-2"/>
                    </svg>
                `;
            } else {
                submitBtn.disabled = true;
                submitBtn.className = 'w-full px-4 py-3 bg-slate-200 text-slate-500 rounded-lg font-medium flex items-center justify-center cursor-not-allowed';
                submitBtn.innerHTML = `
                    Aucun nouveau membre
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-2" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2m3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2"/>
                    </svg>
                `;
            }
        };

        const addBtn = document.getElementById('addBtn');
        const inputs = document.querySelectorAll('form input:not([type="hidden"])');

        addBtn.addEventListener('click', () => {
            const allFilled = Array.from(inputs).every(input => input.value.trim() !== '');

            if (allFilled) {
                const newMember = {
                    fname: document.getElementById('fname').value.trim(),
                    name: document.getElementById('name').value.trim(),
                    email: document.getElementById('email').value.trim()
                };

                addMemberToTab(newMember);

                // Réinitialiser les champs
                inputs.forEach(input => {
                    input.value = '';
                });
            }
        });

        updateSubmitButton();
    </script>
{% endblock %}