{% extends 'base.html.twig' %}

{% block title %}Création - KickScore{% endblock %}

{% block body %}
    <div class="h-[calc(100vh-2rem)]">
        <div class="h-full flex items-center justify-center bg-gradient-to-br from-slate-50 to-white rounded-xl p-8">
            <div class="w-full max-w-md">
                <h1 class="text-4xl font-bold text-slate-800 text-center mb-8">
                    <span>{{ 'nav.creation'|trans }}</span>
                    <span class="block mt-2 text-blue-900 text-2xl font-medium" id="subtitle">
                    <span>{{ 'nav.newmatchandchampionship'|trans }}</span>
                </span>
                </h1>

                <!-- Selection Type -->
                <div class="bg-white rounded-lg shadow-sm border border-slate-100 p-6 mb-6">
                    <p class="text-sm font-medium text-slate-700 mb-3">Que souhaitez-vous créer ?</p>
                    <div class="flex gap-4">
                        <button id="select_btnMatch" class="w-full py-3 px-4 rounded-lg text-slate-700 bg-slate-50 hover:bg-slate-100 transition-colors font-medium">
                            Match
                        </button>
                        <button id="select_btnChampionship" class="w-full py-3 px-4 rounded-lg text-slate-700 bg-slate-50 hover:bg-slate-100 transition-colors font-medium">
                            <span>{{ 'nav.championship'|trans }}</span>
                        </button>
                    </div>
                </div>

                <!-- Import Option -->
                <div id="import" class="bg-white rounded-lg shadow-sm border border-slate-100 p-6 mb-6 hidden">
                    <p class="text-sm font-medium text-slate-700 mb-3"><span>{{ 'nav.import'|trans }}</span></p>
                    <div class="flex gap-4">
                        <button id="select_btnOui" class="w-full py-3 px-4 rounded-lg text-slate-700 bg-slate-50 hover:bg-slate-100 transition-colors font-medium">
                            <span>{{ 'nav.yes'|trans }}</span>
                        </button>
                        <button id="select_btnNon" class="w-full py-3 px-4 rounded-lg text-slate-700 bg-slate-50 hover:bg-slate-100 transition-colors font-medium">
                            <span>{{ 'nav.no'|trans }}</span>
                        </button>
                    </div>
                </div>

                <!-- Main Form -->
                <form id="form" method="post" action="{{ path('app_meet_create') }}" class="hidden space-y-6 bg-white rounded-lg shadow-sm border border-slate-100 p-6">
                    <!-- Name Input -->
                    <div class="space-y-1 hidden" id="name">
                        <label for="name" class="text-sm font-medium text-slate-700"><span>{{ 'nav.name'|trans }}</span></label>
                        <input type="text" id="name" name="name" placeholder= {{ 'nav.nameofchampionship'|trans }}
                               class="w-full px-4 py-3 rounded-lg border border-slate-200 focus:ring-2 focus:ring-blue-900 focus:border-blue-900 transition-colors">
                    </div>

        <!---------- Match ----------->

        <!-- Date -->
        <div class="mb-4 hidden flex justify-center items-center flex-col" id="date">
            <label for="date" class="block text-gray-700 font-medium mb-2">{{ 'nav.dateofthematch'|trans }}</label>
            <input type="datetime-local" id="dateInput" name="date" placeholder={{ 'nav.dateofthematch'|trans }}
                   class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
        </div>

        <div class="w-full flex justify-center">
            <p class="font-medium hidden text-green-500" id="date_valid"></p>
        </div>

        <!-- Select championship  -->
        <div id="champ" class="mb-4 hidden">
            <label for="champ" class="block text-gray-700 font-medium mb-2"><span>{{ 'nav.competition'|trans }}</span></label>
            <select id="champ" name="champ" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                {% for championship in championships %}
                    <option value="{{ championship.id }}">{{ championship.name }}</option>
                {% endfor %}
            </select>
        </div>

        <!-- Select team green  -->
        <div id="greenTeam" class="mb-4 hidden">
            <label for="greenTeam" class="block text-gray-700 font-medium mb-2"><span>{{ 'nav.greenteam'|trans }}</span></label>
            <select required id="greenTeamSelect" name="greenTeam" class="w-full px-3 py-2 border bg-green-200 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                <option disabled selected value=""> <span>{{ 'nav.greenteam'|trans }}</span> </option>
                {% for team in teams %}
                    <option value="{{ team.id }}">{{ team.name }}</option>
                {% endfor %}
            </select>
        </div>

        <!-- Select team blue  -->
        <div id="blueTeam" class="mb-4 hidden">
            <label for="blueTeam" class="block text-gray-700 font-medium mb-2"><span>{{ 'nav.blueteam'|trans }}</span></label>
            <select required id="blueTeamSelect" name="blueTeam" class="w-full px-3 py-2 border bg-blue-200 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                <option disabled selected value=""> <span>{{ 'nav.blueteam'|trans }}</span></option>
                {% for team in teams %}
                    <option value="{{ team.id }}">{{ team.name }}</option>
                {% endfor %}
            </select>
        </div>

        <!-- verification -->
        <div id="date_verifyBtn" class="w-full bg-blue-100 text-center hover:cursor-pointer center rounded-lg py-2 px-4 transition ease-in duration-200 border-blue-300 hover:bg-blue-200 focus:ring focus:ring-blue-200 mt-2">Vérifier</div>


                    <!-- Date -->
                    <div class="space-y-1 hidden" id="date">
                        <label for="dateInput" class="text-sm font-medium text-slate-700"><span>{{ 'nav.dateofthematch'|trans }}</span></label>
                        <div class="space-y-2">
                            <input type="datetime-local" id="dateInput" name="date"
                                   class="w-full px-4 py-3 rounded-lg border border-slate-200 focus:ring-2 focus:ring-blue-900 focus:border-blue-900 transition-colors">
                            <button type="button" id="date_verifyBtn"
                                    class="w-full py-2 px-4 bg-slate-50 text-slate-700 rounded-lg hover:bg-slate-100 transition-colors font-medium">
                                <span>{{ 'nav.verify'|trans }}</span>
                            </button>
                        </div>
                        <p id="date_valid" class="hidden text-sm text-green-600 mt-1"></p>
                    </div>

                    <!-- Score Inputs -->
                    <div class="space-y-1 hidden" id="greenscore">
                        <label for="greenscore" class="text-sm font-medium text-slate-700"><span>{{ 'nav.goalgreen'|trans }}</span></label>
                        <input type="number" id="greenscore" name="greenscore"
                               class="w-full px-4 py-3 rounded-lg border border-slate-200 bg-green-50 focus:ring-2 focus:ring-blue-900 focus:border-blue-900 transition-colors">
                    </div>

                    <div class="space-y-1 hidden" id="bluescore">
                        <label for="bluescore" class="text-sm font-medium text-slate-700"><span>{{ 'nav.goalblue'|trans }}</span></label>
                        <input type="number" id="bluescore" name="bluescore"
                               class="w-full px-4 py-3 rounded-lg border border-slate-200 bg-blue-50 focus:ring-2 focus:ring-blue-900 focus:border-blue-900 transition-colors">
                    </div>

                    <input type="hidden" name="addType" value="" id="addType">

                    <button type="submit"
                            class="w-full px-8 py-4 bg-blue-900 text-white rounded-lg hover:bg-blue-800 transition-colors font-medium text-lg shadow-sm hidden">
                        Créer
                    </button>
                </form>

                <!-- Import Form -->
                <form id="formImport" class="hidden space-y-6 bg-white rounded-lg shadow-sm border border-slate-100 p-6"
                      method="post" action="{{ path('app_meet_import') }}" enctype="multipart/form-data">
                    <div class="space-y-1">
                        <label for="file" class="text-sm font-medium text-slate-700"><span>{{ 'nav.importfile'|trans }}</span></label>
                        <input type="file" id="file" name="file" required
                               class="w-full px-4 py-3 rounded-lg border border-slate-200 focus:ring-2 focus:ring-blue-900 focus:border-blue-900 transition-colors">
                    </div>

                    <button id="submitImport" type="submit"
                            class="w-full px-8 py-4 bg-blue-900 text-white rounded-lg hover:bg-blue-800 transition-colors font-medium text-lg shadow-sm">
                        <span>{{ 'nav.import'|trans }}</span>
                    </button>
                </form>
            </div>
        </div>
    </div>

    <script>
        let selected = null;
        let selectedOui = null;

        // Helper function to update button states
        function updateButtonState(activeBtn, inactiveBtn) {
            activeBtn.classList.remove('bg-slate-50');
            activeBtn.classList.add('bg-blue-900', 'text-white');
            inactiveBtn.classList.remove('bg-blue-900', 'text-white');
            inactiveBtn.classList.add('bg-slate-50');
        }

        // Import selection handlers
        document.getElementById('select_btnOui').addEventListener('click', function() {
            selectedOui = 'OUI';
            updateButtonState(this, document.getElementById('select_btnNon'));
            document.getElementById('form').classList.add('hidden');
            document.getElementById('formImport').classList.remove('hidden');
            document.getElementById('subtitle').textContent = "Importation d'un championnat";
        });

        document.getElementById('select_btnNon').addEventListener('click', function() {
            selectedOui = 'NON';
            updateButtonState(this, document.getElementById('select_btnOui'));
            document.getElementById('form').classList.remove('hidden');
            document.getElementById('formImport').classList.add('hidden');
            document.getElementById('import').classList.add('hidden');
            document.getElementById('subtitle').textContent = "Création d'un championnat";
        });

        // Main type selection handlers
        document.getElementById('select_btnMatch').addEventListener('click', function() {
            selected = 'MATCH';
            updateButtonState(this, document.getElementById('select_btnChampionship'));
            document.getElementById('form').classList.remove('hidden');
            document.getElementById('date').classList.remove('hidden');
            document.getElementById('import').classList.add('hidden');
            document.getElementById('formImport').classList.add('hidden');
            document.getElementById('subtitle').textContent = "Création d'un match";
            document.body.dispatchEvent(new Event('change'));
        });

        document.getElementById('select_btnChampionship').addEventListener('click', function() {
            selected = 'CHAMPIONSHIP';
            //deactivate the required attribute blue team
            document.getElementById('blueTeamSelect').removeAttribute('required');
            document.getElementById('greenTeamSelect').removeAttribute('required');

            console.log('Selected:', selected);
            document.getElementById('select_btnMatch').classList.remove('bg-blue-300');
            document.getElementById('select_btnMatch').classList.add('bg-blue-100');
            event.target.classList.remove('bg-blue-100');
            event.target.classList.add('bg-blue-300');
            //select the import section 
            document.getElementById('import').classList.remove('hidden');
            document.getElementById('date').classList.add('hidden');
            document.getElementById('champ').classList.add('hidden');
            document.getElementById('formImport').classList.add('hidden');
            document.getElementById('subtitle').textContent = "Création d'un championnat";
            document.body.dispatchEvent(new Event('change'));
        });

        // Date verification handler
        document.getElementById('date_verifyBtn').addEventListener('click', () => {
            const date = new Date(document.getElementById('dateInput').value);
            const now = new Date();
            const dateValidMsg = document.getElementById('date_valid');

            if (date < now) {
                document.getElementById('greenscore').classList.remove('hidden');
                document.getElementById('bluescore').classList.remove('hidden');
                dateValidMsg.textContent = "Match passé - Saisie des scores activée";
            } else {
                dateValidMsg.textContent = "Date valide pour un futur match";
            }

            dateValidMsg.classList.remove('hidden');
            document.querySelector('button[type="submit"]').classList.remove('hidden');

            setTimeout(() => dateValidMsg.classList.add('hidden'), 5000);
        });

        // Form change handler
        document.body.addEventListener('change', () => {
            const containers = {
                greenscore: document.getElementById('greenscore'),
                bluescore: document.getElementById('bluescore'),
                champ: document.getElementById('champ'),
                name: document.getElementById('name'),
                greenTeam: document.getElementById('greenTeam'),
                blueTeam: document.getElementById('blueTeam')
            };

            if (selected === 'MATCH') {
                containers.champ.classList.remove('hidden');
                containers.greenTeam.classList.remove('hidden');
                containers.blueTeam.classList.remove('hidden');
                containers.name.classList.add('hidden');
            } else if (selected === 'CHAMPIONSHIP') {
                Object.values(containers).forEach(container => container.classList.add('hidden'));
                containers.name.classList.remove('hidden');
            }
        });

        // Team selection handlers
        const setupTeamSelect = (selectElem, otherSelectElem) => {
            selectElem.addEventListener('change', () => {
                Array.from(otherSelectElem.options).forEach(option => {
                    option.disabled = option.value === selectElem.value;
                });
            });
        };

        setupTeamSelect(document.getElementById('greenTeamSelect'), document.getElementById('blueTeamSelect'));
        setupTeamSelect(document.getElementById('blueTeamSelect'), document.getElementById('greenTeamSelect'));

        // Form submission handler
        document.querySelector('button[type="submit"]').addEventListener('click', () => {
            document.getElementById('addType').value = selected;
        });
    </script>
{% endblock %}